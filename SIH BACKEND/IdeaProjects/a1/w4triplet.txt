import java.util.*;
import java.lang.*;
import java.io.*;

class w4triplet {
    static int n = 3;
    static Scanner sc = new Scanner(System.in);
    static List<Integer> rs;
	public static void main (String[] args) {
		//code
		int numT = sc.nextInt();
		while(numT-- > 0) solve();
	}
	public static void solve(){
	    rs = new ArrayList<>();
	    int numE = sc.nextInt();
	    int[][] arr = new int[n][numE];
	    for(int i = 0; i < n; i++){
	        for(int j = 0; j < numE; j++){
	            arr[i][j] = sc.nextInt();
	        }
	        Arrays.sort(arr[i]);
	    }
	    int[] pointer = new int[n];
	    Arrays.fill(pointer, 0);
	    int diff = Integer.MAX_VALUE;
	    boolean flag = true;
	    while(flag){
	        // kiem tra
	       int[] tmp = findMax(arr, pointer);
	       int maxIndex = tmp[0], minIndex = tmp[1];
	       int max = arr[maxIndex][pointer[maxIndex]];
	       int min = arr[minIndex][pointer[minIndex]];
	       if(diff > (max - min)){
	           rs = new ArrayList<>();
	           for(int i = 0; i < n; i++){
	               rs.add(arr[i][pointer[i]]);
	           }
	           diff = max - min;
	       }
	       if(++pointer[minIndex] >= numE){
	           flag = false;
	       }
	    }
	    Collections.sort(rs);
	    for(int i = n - 1; i >= 0; i--){
	        System.out.print(rs.get(i) + " ");
	    }
	    System.out.println("");
	    
	}
	public static int[] findMax(int[][] arr, int[] pointer){
	    int maxIndex = 0;
	    int minIndex = 0;
	    int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
	    for(int i = 0; i < n; i++){
	        if(arr[i][pointer[i]] > max){
	            max = arr[i][pointer[i]];
	            maxIndex = i;
	        }
	        if(arr[i][pointer[i]] < min){
	            min = arr[i][pointer[i]];
	            minIndex = i;
	        }
	    }
	    return new int[]{maxIndex, minIndex};
	} 
}
